[%
    page.title = 'Meet State';
    page.body_classes.push('state');
%]

[%
    FOR bracket IN state.brackets;
        FOR set IN bracket.sets;
            FOR quiz IN set.rooms;
                room_numbers.${ quiz.room } = 1;
            END;
        END;
    END;
%]

<h2>
    [% meet.data.name %]
    at
    [% meet.data.location %];
    [% meet.start_stamp %]
</h2>

<ul class="column no_print">
    <li>
        Meet Information
        <ul>
            [% FOR icon_link_data IN [
                [ ['Roster'],       [ '/meet/', c.param('meet_id'), '/roster'       ], 'roster'       ],
                [ ['Distribution'], [ '/meet/', c.param('meet_id'), '/distribution' ], 'distribution' ],
                [ ['Statistics'],   [ '/meet/', c.param('meet_id'), '/stats'        ], 'stats'        ],
            ] %]
                <li class="no_bullet">[% PROCESS icon_link.html.tt, data = icon_link_data %]</li>
            [% END %]
        </ul>
    </li>
</ul>

<ul class="column no_print">
    <li>
        Scoreboards
        <ul>
            [% FOR room_number IN room_numbers.keys.sort %]
                [%
                    title = 'Room '    _ room_number;
                    icon  = 'counter_' _ room_number;
                %]
                <li class="no_bullet">[% PROCESS icon_link.html.tt, data = [
                    [title],
                    [ '/meet/', c.param('meet_id'), '/board/', room_number ],
                    icon,
                ] %]</li>
            [% END %]
        </ul>
    </li>
</ul>

[% last_rendered_event_index = -1 %]
[% BLOCK event %]
    [%
        included_indexes = [];
        FOR event_index IN [ 0 .. events.max ];
            IF (
                type == 'pre'  && events.$event_index.stop  == row.start ||
                type == 'post' && events.$event_index.start == row.stop
            );
                included_indexes.push(event_index);
                WHILE 1;
                    prev_event_index = event_index;
                    event_index = event_index + ( ( type == 'pre' ) ? -1 : 1 );

                    IF event_index < 0 OR event_index > events.max;
                        BREAK;
                    END;
                    IF (
                        type == 'pre'  && events.$event_index.stop  == events.$prev_event_index.start ||
                        type == 'post' && events.$event_index.start == events.$prev_event_index.stop
                    );
                        included_indexes.push(event_index);
                    ELSE;
                        BREAK;
                    END;
                END;
            END;
        END;
    %]

    [% FOR event_index IN included_indexes.unique.nsort %]
        [% UNLESS last_rendered_event_index == event_index %]
            [%
                last_rendered_event_index = event_index;
                event                     = events.$event_index;
            %]
            <div class="info_box">
                <b>[% event.name %]</b>
                [% event.date %]
                from [% event.start_time %]
                to [% event.stop_time %]
                ([% event.duration %] minutes)
            </div>
        [% END %]
    [% END %]
[% END %]

[% FOR bracket IN state.brackets %]
    <h3>Bracket: [% bracket.name %]</h3>

    [% FOR set IN bracket.sets %]
        [% schedule = set.rooms.0.schedule %]

        [% PROCESS event
            type   = 'pre',
            events = state.events,
            row    = schedule,
        %]

        <div class="schedule_row">
            [% IF schedule %]
                <div class="summary_box schedule_row_lead">
                    [% schedule.date %]<br>
                    [% schedule.start_time %]<br>
                    [% schedule.stop_time %]<br>
                    [% schedule.duration %] minutes
                </div>
            [% END %]

            [% FOR quiz IN set.rooms %]
                <div class="summary_box relative">
                    [%
                        resolved_teams = 0;
                        teams_names    = [];
                        FOR team IN quiz.roster;
                            resolved_teams = resolved_teams + 1 IF team.name;
                            teams_names.push( team.name );
                        END;
                        teams_resolved = ( resolved_teams == quiz.roster.size ) ? 1 : 0;

                        href =
                            ( quiz.id ) ? c.url_for( '/quiz/' _ quiz.id ) :
                            ( qm_auth AND teams_resolved ) ? c.url_for('/quiz/build').query(
                                meet    => c.param('meet_id'),
                                bracket => bracket.name,
                                quiz    => quiz.name,
                                team    => teams_names,
                            ) :
                            undef;
                    %]
                    [% IF href %]<a href="[% href %]">[% END %]<b>Quiz: [%
                        quiz.name
                    %]</b>[% IF href %]</a>[% END %]<br>

                    Room: [% quiz.room %]

                    [% IF quiz.current_query_id %]
                        <span class="query">
                            Query: [% quiz.current_query_id %]
                        </span>
                    [% END %]

                    [% PROCESS quiz_teams_list.html.tt roster = quiz.roster %]

                    [% IF qm_auth %]
                        [% IF quiz.id %]
                            <a
                                class="qm_auth"
                                data-confirm="
                                    Are you absolutely sure you want to do this?<br>
                                    This will delete all data for this quiz.<br>
                                    There is no undo...
                                "
                                href="[% c.url_for('/quiz/delete/' _ quiz.id ) %]"
                            >Delete Data</a>
                        [% ELSIF NOT teams_resolved %]
                            <a
                                class="qm_auth"
                                data-confirm="
                                    Are you absolutely sure you want to do this?<br>
                                    This is likely not needed. Teams should<br>
                                    automatically populate.
                                "
                                href="[%
                                    c.url_for('/quiz/teams').query(
                                        meet    => c.param('meet_id'),
                                        bracket => bracket.name,
                                        quiz    => quiz.name,
                                    )
                                %]"
                            >Set Teams</a>
                        [% END %]

                        [% confirm_js = BLOCK %]
                            window.addEventListener( 'load', () => {
                                window.document.querySelectorAll('a.qm_auth').forEach( a => {
                                    a.onclick = () => {
                                        notice(
                                            a.attributes.getNamedItem('data-confirm').textContent,
                                            [ 'Yes, I am sure!', 'Nevermind' ],
                                            event => {
                                                if ( event.target.textContent == 'Yes, I am sure!' )
                                                    window.location.href = a.href;
                                            },
                                        );
                                        return false;
                                    };
                                } );
                            } );
                        [% END %]
                        [% page.js.inline.push(confirm_js) %]
                    [% END %]
                </div>
            [% END %]
        </div>

        [% PROCESS event
            type   = 'post',
            events = state.events,
            row    = schedule,
        %]
    [% END %]
[% END %]
