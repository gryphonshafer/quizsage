[%
    USE date;
    page.title = 'Memory State';
%]

[% BLOCK tiles %]
    <div class="horizontal_scroller">
        <div class="tiles">
            <div>
                <div></div>
                <div>Sun</div>
                <div>Mon</div>
                <div>Tue</div>
                <div>Wed</div>
                <div>Thr</div>
                <div>Fri</div>
                <div>Sat</div>
            </div>

            [%
                max_steps  = 12;
                step_shift = 2;
            %]
            [% FOR week IN data %]
                <div>
                    <div>[% week.0.month %]</div>
                    [% FOR day IN week %]
                        <div
                            class="tile tile_[%
                                ( day.verses == 0 ) ? 0 :
                                ( day.verses + step_shift > max_steps ) ? max_steps : day.verses + step_shift
                            %]"
                            title="[% day.verses
                                %] verse[% IF day.verses != 1 %]s[% END %] on [%
                                date.format( day.date, '%a, %b %-d' ) %]"></div>
                    [% END %]
                </div>
            [% END %]
        </div>
    </div>
[% END %]

[% tiles = BLOCK %]
    let h_scrollers;

    window.addEventListener( 'load', () => {
        h_scrollers = window.document.querySelectorAll('div.horizontal_scroller');

        window.addEventListener( 'resize', () => {
            h_scrollers.forEach( h_scroller => h_scroller.scrollLeft = h_scroller.scrollLeftMax );
        } );

        window.dispatchEvent( new Event('resize') );

        window.document.querySelectorAll('details.with_horizontal_scroller').forEach( details => {
            details.addEventListener( 'toggle', () => {
                h_scrollers.forEach( h_scroller => h_scroller.scrollLeft = h_scroller.scrollLeftMax );
            } );
        } );

        window.document.querySelectorAll('div.tile').forEach( tile => {
            tile.onclick = () => notice( tile.title );
        } );
    } );
[% END %]
[% page.js.inline.push(tiles) %]

[% BLOCK report %]
    [% IF data AND data.size %]
        <p>
            Report of memorization levels of verses last modified since:
            <time datetime="[% state.earliest_active_season_start %]">[%
                date.format( state.earliest_active_season_start, '%b %e, %Y' ) %]</time>
        </p>

        [% FOR section IN data %]
            <details>
                <summary>
                    Level [% section.level %]
                    <i>([% section.number %] verse[% ( section.number > 1 ) ? 's' : '' %])</i>
                </summary>
                <ul>
                    [% FOR block IN section.data %]
                        <li>
                            [% block.book %] [% block.chapter %]:[% block.run %]
                            [% block.bible %]
                            <i>([% block.number %] verse[% ( block.number > 1 ) ? 's' : '' %])</i>
                        </li>
                    [% END %]
                </ul>
            </details>
        [% END %]
    [% ELSE %]
        <p>There is currently no memorization review data.</p>
    [% END %]
[% END %]

<h2>Initial Memorization: [% user.data.first_name _ ' ' _ user.data.last_name %]</h2>

[% PROCESS tiles, data = state.tiles %]

<h2>Memorization Review: [% user.data.first_name _ ' ' _ user.data.last_name %]</h2>

[% PROCESS report, data = state.report %]

<h2>Share Memory State</h2>

<details>
    <summary>Instructions</summary>
    <p>
        You may optionally share your memory state with any other active user of
        the application. Type their name or a substring of their name in the
        field below, then select their name when it appears. You may remove them
        from your share list at any time.
    </p>
</details>

[%
    PROCESS user_select.html.tt,
        title  = 'Add Person to Sharing',
        params = {
            action = 'add',
        };
%]

<h3>Current Share List</h3>

[% IF state.shared_to AND state.shared_to.size %]
    <ul>
        [% FOR person IN state.shared_to %]
            <li>
                [% person.first_name %]
                [% person.last_name %]
                ([% person.email %])
                <a href="[% c.url_for.query({ action => 'remove', user_id => person.user_id }) %]">Remove</a>
            </li>
        [% END %]
    </ul>
[% ELSE %]
    <p>There are no persons with whom you are currently sharing your memory state.</p>
[% END %]

<h2>Shared Memory States</h2>

[% IF state.shared_from AND state.shared_from.size %]
    <form id="shared_from_labels" method="get">
        <input type="hidden" name="shared_from_labels" value="1">

        <button disabled>Pick-Up Quiz from Selected</button>

        [% FOR person IN state.shared_from %]
            <details class="with_horizontal_scroller">
                <summary>
                    [% IF person.report AND person.report.size %]
                        <input type="checkbox" name="persons" value="[% person.json | html %]">
                    [% END %]
                    [% person.user.first_name %]
                    [% person.user.last_name %]
                </summary>

                [% PROCESS tiles,  data = person.tiles  %]
                [% PROCESS report, data = person.report %]

                <ul>
                    <li>
                        [% UNLESS c.session.become %]
                            <a href="[%
                                c.url_for.query({ action => 'become', user_id => person.user.user_id })
                            %]">"Become" [% person.user.first_name %]</a>
                            <i>(to update that account's memorization)</i>
                        [% ELSE %]
                            <a href="[%
                                c.url_for('/memory/state').query({ action => 'unbecome' })
                            %]">"Unbecome" [% person.user.first_name %]</a>
                            <i>(to revert to your own account)</i>
                        [% END %]
                    </li>
                    <li>
                        <a class="unfollow" href="[%
                            c.url_for.query({ action => 'unfollow', user_id => person.user.user_id })
                        %]">Unfollow [% person.user.first_name %]'s State</a>
                        <i>(which can't be undone without the user resharing)</i>
                    </li>
                </ul>
            </details>
        [% END %]
    </form>
[% ELSE %]
    <p>There are no persons who have shared their memory state with you.</p>
[% END %]

[% shared_from_labels = BLOCK %]
    window.addEventListener( 'load', () => {
        const checkboxes = window.document.querySelectorAll('form#shared_from_labels input[type="checkbox"]');
        const buttons    = window.document.querySelectorAll('form#shared_from_labels button');

        buttons.forEach(
            button => button.disabled =
                ! [ ...checkboxes ].filter( checkbox => checkbox.checked ).length
        );

        checkboxes.forEach( checkbox => {
            checkbox.addEventListener( 'change', () => {
                buttons.forEach(
                    button => button.disabled =
                        ! [ ...checkboxes ].filter( checkbox => checkbox.checked ).length
                );
            } );
        } );

        window.document.querySelectorAll('form#shared_from_labels a.unfollow').forEach( a => {
            a.onclick = () => {
                notice(
                    'Are you sure you want to unfollow the memory state of this person?<br>' +
                        'There is no option to undo this without ' +
                        'the person resharing their memory state with you.',
                    [ 'Yes, unfollow', 'No, leave it unchanged' ],
                    event => {
                        if ( event.target.textContent == 'Yes, unfollow' )
                            window.location.href = a.href;
                    },
                );
                return false;
            };
        } );
    } );
[% END %]
[% page.js.inline.push(shared_from_labels) %]
